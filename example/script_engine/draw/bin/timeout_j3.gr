import math

class julia
	attr p
	attr q 
	attr wd
	attr hg 
	attr radius
	attr iter_nu
	func init(p,q,wd,hg,radius,iter_nu)
		this.p=p
		this.q=q

		this.wd=wd
		this.hg=hg

		this.radius=radius
		this.iter_nu=iter_nu

	end 

		
	func draw()
		p=this.p
		q=this.q
		wd=this.wd
		hg=this.hg
		radius=this.radius
		iter_nu=this.iter_nu


		xs=-1.5
		xl=1.5
		ys=-1.5
		yl=1.5

		xb=0
		yb=0
		x0=0
		y0=0
		nk=0
		r=0

		rdm100=$math.random()%100

		rdmTimes_Red=2
		rdmTimes_Green=1
		rdmTimes_Blue=3

		rMover=2
		gMover=4
		bMover=3

		RedBase=Int($math.pow(rdm100,rdmTimes_Red))%256
		GreenBase=Int($math.pow(rdm100,rdmTimes_Green))%256
		BlueBase=Int($math.pow(rdm100,rdmTimes_Blue))%256
		
		print rdm100,RedBase,GreenBase,BlueBase



		xb=(xl-xs)/wd
		yb=(yl-ys)/hg

		nx=0
		while nx<=wd
			ny=0
			while ny<=hg
				x0=xs+nx*xb
				y0=ys+ny*yb
				k=0
				while k<=iter_nu
					xk=x0*x0-y0*y0+p
					yk=2*x0*y0+q
					x0=xk 
					y0=yk
					r=xk*xk+yk*yk

					if r>radius
						break
					end 
					k=k+1
				end 

				red=Int(RedBase+k*rMover)%256
				green=Int(GreenBase+k*gMover)%256
				blue=Int(BlueBase+k*bMover)%256

				#print nx,ny,"|",k,red,green,blue
				setColor(red/255.0,green/255.0,blue/255.0)
				drawPixel(nx,ny)	

				ny+=1
			end 
			nx+=1
		end 
	end
end

j=julia(-0.491762,-0.531657,width,height,400,400)

j.draw()
