class julia
	attr p
	attr q 
	attr wd
	attr hg 
	attr m
	attr k0
	attr a
	attr b
	attr offset_x
	attr offset_y
	func init(p,q,wd,hg,m,k0,a,b,offset_x,offset_y)
		this.p=p
		this.q=q

		this.wd=wd
		this.hg=hg

		this.m=m
		this.k0=k0

		this.a=a
		this.b=b
		this.offset_x=offset_x
		this.offset_y=offset_y
	end 

	func Color(r,g,b)
		setColor(r/255.0,g/255.0,b/255.0)
	end 
		
	func draw()
		H=0
		offset_x=this.offset_x
		offset_y=this.offset_y
		p=this.p
		q=this.q
		wd=this.wd
		hg=this.hg
		m=this.m
		k0=this.k0

		a=this.a
		b=this.b

		xs=-1.5
		xl=1.5
		ys=-1.5
		yl=1.5

		xb=0
		yb=0
		x0=0
		y0=0
		nk=0
		r=0



		xb=(xl-xs)/wd
		yb=(yl-ys)/hg

		nx=0
		while nx<=wd
			ny=0
			while ny<=hg
				x0=xs+nx*xb
				y0=ys+ny*yb
				k=0
				while 1
					xk=x0*x0-y0*y0+p
					yk=2*x0*y0+q
					k=k+1
					x0=xk 
					y0=yk
					r=xk*xk+yk*yk
					if r>m 
						H=(Float(k)/k0)
						setColor(H*3,H*9,H*0.2)
						drawPixel(offset_x+nx,offset_y+ny)
						break
					end
					if k>=k0
						H=(Float(r)/m)*255
						this.Color(H*3,H*9,(H+50))
					#	this.Color(0,0,0)
						drawPixel(offset_x+nx,offset_y+ny)
						break
					end
					continue

				end 
				ny+=1
			end 
			nx+=1
		end 
	end
end

export julia

class julia3
	attr p
	attr q 
	attr wd
	attr hg 
	attr m
	attr k0
	attr a
	attr b
	attr offset_x
	attr offset_y
	func init(p,q,wd,hg,m,k0,a,b,offset_x,offset_y)
		this.p=p
		this.q=q

		this.wd=wd
		this.hg=hg

		this.m=m
		this.k0=k0

		this.a=a
		this.b=b
		this.offset_x=offset_x
		this.offset_y=offset_y
	end 

	func Color(r,g,b)
		setColor(r/255.0,g/255.0,b/255.0)
	end 
		
	func draw()
		H=0
		offset_x=this.offset_x
		offset_y=this.offset_y
		p=this.p
		q=this.q
		wd=this.wd
		hg=this.hg
		m=this.m
		k0=this.k0

		a=this.a
		b=this.b

		xs=-1.5
		xl=1.5
		ys=-1.5
		yl=1.5

		xb=0
		yb=0
		x0=0
		y0=0
		nk=0
		r=0



		xb=(xl-xs)/wd
		yb=(yl-ys)/hg

		nx=0
		while nx<=wd
			ny=0
			while ny<=hg
				x0=xs+nx*xb
				y0=ys+ny*yb
				k=0
				while 1
					xk=x0*x0*x0-3*x0*y0*y0+p
					yk=3*x0*x0*y0-y0*y0*y0+q
					k=k+1
					x0=xk 
					y0=yk
					r=xk*xk+yk*yk
					if r>m 
						H=(Float(k)/k0)*a
						this.Color(H*3,H*9,H+50)
						#setColor(1,1,1)
						drawPixel(offset_x+nx,offset_y+ny)
						break
					end
					if k>=k0
						H=r*b
						this.Color(H*3,H*9,H+50)
						#this.Color(0,0,0)
						drawPixel(offset_x+nx,offset_y+ny)
						break
					end
					continue

				end 
				ny+=1
			end 
			nx+=1
		end 
	end
end

export julia3


